public function genericSelect($tblName = null,$columnName = null){
        $explodeResult = explode( ",", $columnName['select'] );
        // print_r($explodeResult);
        // print_r($columnName);
        
        // print_r($explodeResult);
        // echo "['id', 'name', 'prefix']";

        $result = "['" .implode ("', '", $explodeResult). "']";
        // print_r($result);
        
        // $query = DB::table($tblName)->select(['id','name','prefix']);
        $query = DB::table($tblName)->select($explodeResult);

        // print_r($query);
        // dd($query);

        $results = $query->get();
        return $results;
    }
	
	==================================================
	
	
	public function genericSelect($tblName = null,$columnName = null,$id = null){
        echo "<pre>";
        if(!empty($id)){
            echo $id;
        }else{
            echo "5555";
        }
        if(empty($columnName)){
            echo "jonj";
        }else{
            echo "kkkkkk";
        }


        if(!empty($id) && empty($columnName)){
            $query = DB::table($tblName)->select([])->where('id', "$id");
            dd($query);
            die;
            $results = $query->get();

        }

       
        die;

        return "Ganesh";
        $explodeResult = explode( ",", $columnName['select'] );
        // $result = "['" .implode ("', '", $explodeResult). "']";
        print_r($columnName);
        // ->where(['id=1'])
        try { 
                $query = DB::table($tblName)->select($explodeResult)->where('name', 'ram');
                // Closures include ->first(), ->get(), ->pluck(), etc.
                print_r($query);
                return $results = $query->get();
                // return $results;
          } catch(Exception $ex){ 
                // dd($ex->getMessage()); 
                return $ex->getMessage();
                // Note any method of class PDOException can be called on $ex.
          }
    }